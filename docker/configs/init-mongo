#!/bin/bash

set -e
set -o pipefail
set -o nounset

# -----------------------------------------------------------------------------

MONGO_ROOT_USERNAME=$(<${MONGODB_INITDB_ROOT_USERNAME_FILE})
MONGO_ROOT_PASSWORD=$(<${MONGODB_INITDB_ROOT_PASSWORD_FILE})
MONGO_USERNAME=$(<${MONGO_USERNAME_FILE})
MONGO_PASSWORD=$(<${MONGO_PASSWORD_FILE})

# -----------------------------------------------------------------------------

for var in MONGO_ROOT_USERNAME \
           MONGO_ROOT_PASSWORD \
           MONGO_USERNAME \
           MONGO_PASSWORD; do
    : "${!var:?Variable $var is not set}"
done

while ! /check-mongo >/dev/null 2>&1; do
  echo "Waiting for the script to succeed..."
  sleep 1
done

echo "Creating or updating MongoDB users... root:${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD} user:${MONGO_USERNAME}:${MONGO_PASSWORD}"

mongosh "mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@localhost:${MONGO_PORT}/admin" <<EOF
use admin

// Check if user already exists
const userExists = db.getUser("${MONGO_USERNAME}") !== null;

// Create or update user
if (!userExists) {
  db.createUser({
    user: "${MONGO_USERNAME}",
    pwd: "${MONGO_PASSWORD}",
    roles: [
      { role: "readWrite", db: "${MONGO_DBNAME}" },
      { role: "dbAdmin", db: "${MONGO_DBNAME}" },
    ]
  });
  print("Mongodb user created!");
} else {
  // Update roles if user exists
  db.updateUser("${MONGO_USERNAME}", {
    roles: [
      { role: "readWrite", db: "${MONGO_DBNAME}" },
      { role: "dbAdmin", db: "${MONGO_DBNAME}" },
    ]
  });
  print("Mongodb user updated!");
}
EOF

echo "MongoDB users creation or update complete!"
